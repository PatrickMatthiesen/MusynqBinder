@if (IsVisible)
{
	<div class="fixed inset-0 bg-gray-500/50 z-40 flex justify-center items-center" @onclick="CloseModal">
		<div class="bg-white rounded-lg shadow-xl max-w-md w-full mx-4 z-50" @onclick:stopPropagation>
			<div class="flex justify-between items-center border-b border-gray-200 px-6 py-4">
				<h3 class="text-xl font-semibold text-gray-900">@Title</h3>
				<button @onclick="CloseModal" class="text-gray-500 hover:text-gray-700">
					<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
					</svg>
				</button>
			</div>
			<div class="p-6 overflow-y-auto max-h-96">
				@ChildContent
			</div>
			<div class="border-t border-gray-200 px-3 py-2 flex justify-end">
				<button @onclick="CloseModal" class="px-2 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors">
					Close
				</button>
			</div>
		</div>
	</div>
}

@code {
	[Parameter]
	public bool IsVisible { get; set; } = false;

	[Parameter]
	public string Title { get; set; } = "Modal Title";

	[Parameter]
	public EventCallback OnClose { get; set; }

	[Parameter]
	public RenderFragment ChildContent { get; set; } = default!;

	private Task CloseModal() {
		IsVisible = false;
		return OnClose.InvokeAsync();
	}
}